#DB properties:
spring.datasource.driver=org.postgresql.Driver
spring.datasource.url = jdbc:postgresql://localhost:5432/icm_db
spring.datasource.username = postgres
spring.datasource.password = password
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

org.hibernate.dialect.MySQL5Dialect

spring.jpa.hibernate.ddl-auto = update
spring.jpa.show-sql = true

#Hibernate Configuration
hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
hibernate.hbm2ddl.auto = validate
hibernate.ejb.naming_strategy = org.hibernate.cfg.ImprovedNamingStrategy
hibernate.show_sql = false
hibernate.format_sql = true
entitymanager.packages.to.scan = com.icm.bean
hibernate.id.new_generator_mappings = false



#jwt
jwt.expirationTimeMin=${JWT_EXP_TIME:300}
jwt.secret=QHQ9XyhZLXQ3W00=
jwt.headerName=Authorization
jwt.Platform=Platform
jwt.androidExpirationTimeMin=14400



#mail configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=465
spring.mail.protocol=smtps
spring.mail.username=testsearhmodel@gmail.com
spring.mail.password=bjyckqfcckhpxrnc
spring.mail.properties.mail.transport.protocol=smtps
spring.mail.properties.mail.smtps.auth=false
spring.mail.properties.mail.smtps.starttls.enable=false
spring.mail.properties.mail.smtps.timeout=8000

mobile.api.key=308145AODhNywzN55df272ce
spring.aop.proxy-target-class=true



spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false



## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=C:/Users/Rishabh-Moptra/Desktop/uploaded_data